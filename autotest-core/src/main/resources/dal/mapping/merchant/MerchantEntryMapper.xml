<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dal.dao.merchant.MerchantEntryDAO">
  <resultMap id="BaseResultMap" type="dal.model.merchant.MerchantEntryDO">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="req_id" jdbcType="VARCHAR" property="reqId" />
    <result column="gid" jdbcType="VARCHAR" property="gid" />
    <result column="entry_user_id" jdbcType="VARCHAR" property="entryUserId" />
    <result column="partner_id" jdbcType="VARCHAR" property="partnerId" />
    <result column="plat_partner_id" jdbcType="VARCHAR" property="platPartnerId" />
    <result column="account_no" jdbcType="VARCHAR" property="accountNo" />
    <result column="channel_id" jdbcType="VARCHAR" property="channelId" />
    <result column="channel_plat_merchant_id" jdbcType="VARCHAR" property="channelPlatMerchantId" />
    <result column="sub_merchant_property" jdbcType="VARCHAR" property="subMerchantProperty" />
    <result column="sub_merchant_id" jdbcType="VARCHAR" property="subMerchantId" />
    <result column="channel_sub_merchant_id" jdbcType="VARCHAR" property="channelSubMerchantId" />
    <result column="merchant_entry_type" jdbcType="VARCHAR" property="merchantEntryType" />
    <result column="signed_status" jdbcType="VARCHAR" property="signedStatus" />
    <result column="node" jdbcType="INTEGER" property="node" />
    <result column="node_memo" jdbcType="VARCHAR" property="nodeMemo" />
    <result column="error_memo" jdbcType="VARCHAR" property="errorMemo" />
    <result column="certify_status" jdbcType="VARCHAR" property="certifyStatus" />
    <result column="payment_verify_status" jdbcType="VARCHAR" property="paymentVerifyStatus" />
    <result column="merchant_entry_status" jdbcType="VARCHAR" property="merchantEntryStatus" />
    <result column="channel_sub_merchant_account" jdbcType="VARCHAR" property="channelSubMerchantAccount" />
    <result column="external_meta_data" jdbcType="VARCHAR" property="externalMetaData" />
    <result column="raw_add_time" jdbcType="TIMESTAMP" property="rawAddTime" />
    <result column="raw_update_time" jdbcType="TIMESTAMP" property="rawUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, req_id, gid, entry_user_id, partner_id, plat_partner_id, account_no, channel_id, 
    channel_plat_merchant_id, sub_merchant_property, sub_merchant_id, channel_sub_merchant_id, 
    merchant_entry_type, signed_status, node, node_memo, error_memo, certify_status, 
    payment_verify_status, merchant_entry_status, channel_sub_merchant_account, external_meta_data, 
    raw_add_time, raw_update_time
  </sql>
  <select id="selectByExample" parameterType="dal.model.merchant.MerchantEntryDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from merchant_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="dal.model.merchant.MerchantEntryDOExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from merchant_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="dal.model.merchant.MerchantEntryDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from merchant_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update merchant_entry
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.reqId != null">
        req_id = #{record.reqId,jdbcType=VARCHAR},
      </if>
      <if test="record.gid != null">
        gid = #{record.gid,jdbcType=VARCHAR},
      </if>
      <if test="record.entryUserId != null">
        entry_user_id = #{record.entryUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerId != null">
        partner_id = #{record.partnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.platPartnerId != null">
        plat_partner_id = #{record.platPartnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountNo != null">
        account_no = #{record.accountNo,jdbcType=VARCHAR},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=VARCHAR},
      </if>
      <if test="record.channelPlatMerchantId != null">
        channel_plat_merchant_id = #{record.channelPlatMerchantId,jdbcType=VARCHAR},
      </if>
      <if test="record.subMerchantProperty != null">
        sub_merchant_property = #{record.subMerchantProperty,jdbcType=VARCHAR},
      </if>
      <if test="record.subMerchantId != null">
        sub_merchant_id = #{record.subMerchantId,jdbcType=VARCHAR},
      </if>
      <if test="record.channelSubMerchantId != null">
        channel_sub_merchant_id = #{record.channelSubMerchantId,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantEntryType != null">
        merchant_entry_type = #{record.merchantEntryType,jdbcType=VARCHAR},
      </if>
      <if test="record.signedStatus != null">
        signed_status = #{record.signedStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.node != null">
        node = #{record.node,jdbcType=INTEGER},
      </if>
      <if test="record.nodeMemo != null">
        node_memo = #{record.nodeMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.errorMemo != null">
        error_memo = #{record.errorMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.certifyStatus != null">
        certify_status = #{record.certifyStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentVerifyStatus != null">
        payment_verify_status = #{record.paymentVerifyStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantEntryStatus != null">
        merchant_entry_status = #{record.merchantEntryStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.channelSubMerchantAccount != null">
        channel_sub_merchant_account = #{record.channelSubMerchantAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.externalMetaData != null">
        external_meta_data = #{record.externalMetaData,jdbcType=VARCHAR},
      </if>
      <if test="record.rawAddTime != null">
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null">
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update merchant_entry
    set id = #{record.id,jdbcType=BIGINT},
      req_id = #{record.reqId,jdbcType=VARCHAR},
      gid = #{record.gid,jdbcType=VARCHAR},
      entry_user_id = #{record.entryUserId,jdbcType=VARCHAR},
      partner_id = #{record.partnerId,jdbcType=VARCHAR},
      plat_partner_id = #{record.platPartnerId,jdbcType=VARCHAR},
      account_no = #{record.accountNo,jdbcType=VARCHAR},
      channel_id = #{record.channelId,jdbcType=VARCHAR},
      channel_plat_merchant_id = #{record.channelPlatMerchantId,jdbcType=VARCHAR},
      sub_merchant_property = #{record.subMerchantProperty,jdbcType=VARCHAR},
      sub_merchant_id = #{record.subMerchantId,jdbcType=VARCHAR},
      channel_sub_merchant_id = #{record.channelSubMerchantId,jdbcType=VARCHAR},
      merchant_entry_type = #{record.merchantEntryType,jdbcType=VARCHAR},
      signed_status = #{record.signedStatus,jdbcType=VARCHAR},
      node = #{record.node,jdbcType=INTEGER},
      node_memo = #{record.nodeMemo,jdbcType=VARCHAR},
      error_memo = #{record.errorMemo,jdbcType=VARCHAR},
      certify_status = #{record.certifyStatus,jdbcType=VARCHAR},
      payment_verify_status = #{record.paymentVerifyStatus,jdbcType=VARCHAR},
      merchant_entry_status = #{record.merchantEntryStatus,jdbcType=VARCHAR},
      channel_sub_merchant_account = #{record.channelSubMerchantAccount,jdbcType=VARCHAR},
      external_meta_data = #{record.externalMetaData,jdbcType=VARCHAR},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>